name: Build and Release with Velopack

on:
  push:
    branches: [ "main", "development" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-x64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Install Velopack CLI tool
    - name: Install Velopack
      run: dotnet tool install -g vpk

    # Get version from tag, manual input, or use 0.0.0 for non-tag builds
    - name: Set Version
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
          VERSION="${{ github.ref }}"
          VERSION="${VERSION#refs/tags/v}"
        else
          VERSION="0.0.0-${GITHUB_SHA::8}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Building version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore src/Oracle.csproj

    # Build and publish the app
    - name: Publish App
      run: |
        dotnet publish src/Oracle.csproj \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          -p:PublishSingleFile=true \
          -p:PublishReadyToRun=true \
          -p:EnableCompressionInSingleFile=true \
          -p:IncludeNativeLibrariesForSelfExtract=true \
          --output ./publish

    # Package with Velopack
    - name: Package with Velopack (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        vpk pack \
          --packId BalatroSeedOracle \
          --packVersion ${{ env.VERSION }} \
          --packDir ./publish \
          --mainExe Oracle.exe \
          --packTitle "Balatro Seed Oracle" \
          --packAuthors "OptimusPi" \
          --outputDir ./releases \
          --runtime ${{ matrix.runtime }}
    
    - name: Package with Velopack (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        vpk pack \
          --packId BalatroSeedOracle \
          --packVersion ${{ env.VERSION }} \
          --packDir ./publish \
          --mainExe Oracle \
          --packTitle "Balatro Seed Oracle" \
          --packAuthors "OptimusPi" \
          --outputDir ./releases \
          --runtime ${{ matrix.runtime }}

    # Upload Velopack packages
    - name: Upload Velopack Packages
      uses: actions/upload-artifact@v4
      with:
        name: velopack-${{ matrix.runtime }}
        path: ./releases/
        retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: List all files
      run: ls -lahR ./artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/velopack-win-x64/*
          ./artifacts/velopack-linux-x64/*
          ./artifacts/velopack-osx-x64/*
        generate_release_notes: true
        body: |
          ## ðŸŽ® Balatro Seed Oracle Release

          ### Installation Instructions

          #### Windows
          Download and run `BalatroSeedOracle-Setup.exe`

          #### Linux
          Download and run the AppImage:
          ```bash
          chmod +x BalatroSeedOracle-*.AppImage
          ./BalatroSeedOracle-*.AppImage
          ```

          #### macOS
          Download and open the `.dmg` file, then drag the app to Applications

          ### Features
          - âœ¨ Self-contained - no .NET runtime required
          - ðŸ”„ Auto-updates built-in (can be disabled)
          - ðŸ“¦ Native installers for each platform
          - ðŸŽ¯ Optimized for Balatro seed searching

          ### Support
          For issues or questions, visit: https://github.com/OptimusPi/BalatroSeedOracle
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
